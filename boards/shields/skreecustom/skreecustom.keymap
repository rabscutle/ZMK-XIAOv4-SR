/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

//#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        tog_on: toggle_layer_on_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer On";
            toggle-mode = "on";
        };
        tog_off: toggle_layer_off_only {
            compatible = "zmk,behavior-toggle-layer";
            #binding-cells = <1>;
            display-name = "Toggle Layer Off";
            toggle-mode = "off";
        };
    };
};


/ {
    combos { compatible = "zmk,combos"; };

    macros {
        CPS: CPS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp P &kp P &kp E &kp R &kp T &kp A &kp I &kp N &kp I &kp N &kp G &kp LS(M) &kp O &kp N &kp E &kp Y &kp DLLR &kp N9>;
            label = "CPS";
        };

        RABS: RABS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp A &kp B &kp S &kp C &kp U &kp T &kp L &kp E>;
            label = "RABS";
        };

        PKH: PKH {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp K &kp H &kp T &kp E &kp X &kp A &kp S &kp AT &kp Y &kp A &kp H &kp O &kp O &kp DOT &kp C &kp O &kp M>;
            label = "PKH";
        };

        UID: UID {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp N0 &kp N0 &kp N9 &kp N8 &kp N6 &kp N6>;
            label = "UID";
        };

        EML: EML {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp A &kp T &kp R &kp I &kp C &kp K &kp DOT &kp H &kp E &kp N &kp S &kp O &kp N &kp AT &kp S &kp T &kp A &kp N &kp D &kp A &kp R &kp D &kp DOT &kp C &kp O &kp M>;
            label = "EML";
        };

        HANGER: HANGER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp LS(O) &kp DLLR &kp D &kp N0 &kp LS(N) &kp LS(T) &kp N &kp N3 &kp POUND &kp LS(D) &kp UNDER &kp H &kp LS(A) &kp LS(T) &kp N2 &kp LS(B) &kp A &kp C &kp N0 &kp LS(W) &kp LS(B) &kp N0 &kp LS(Y)>;
            label = "HANGER";
        };

        HANGERU: HANGERU {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Y) &kp O &kp DLLR &kp LS(D) &kp N0 &kp N &kp T &kp LS(N) &kp N3 &kp POUND &kp D &kp UNDER &kp LS(H) &kp A &kp T &kp N2 &kp B &kp LS(A) &kp LS(C) &kp N0 &kp W &kp B &kp N0 &kp Y>;
            label = "HANGERU";
        };

        WKPG: WKPG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp E &kp N3 &kp K &kp N8 &kp P &kp AT &kp U &kp G>;
            label = "WKPG";
        };

        LPA: LPA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N &kp I &kp N &kp E &kp T &kp H &kp R &kp E &kp E &kp F &kp O &kp U &kp R &kp T &kp E &kp LS(X) &kp A &kp S &kp POUND &kp N2 &kp N1>;
            label = "LPA";
        };

        OP1: OP1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Y &kp O &kp U &kp H &kp A &kp V &kp E &kp C &kp R &kp A &kp Z &kp Y &kp E &kp Y &kp E &kp LS(S) &kp POUND &kp N8>;
            label = "OP1";
        };

        OP2: OP2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp Y &kp G &kp M &kp Y &kp D &kp O &kp N &kp K &kp E &kp Y &kp F &kp R &kp U &kp I &kp LS(T) &kp N4 &kp POUND>;
            label = "OP2";
        };

        OWTTc: OWTTc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp LS(T) &kp LS(H) &kp N3 &kp R &kp W &kp N0 &kp LS(R) &kp LS(L) &kp LS(D) &kp DLLR &kp T &kp LS(H) &kp LS(A) &kp LS(N) &kp T &kp LS(H) &kp POUND &kp LS(S) &kp N3>;
            label = "OWTTc";
        };

        OWTT: OWTT {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp T &kp H &kp N3 &kp LS(R) &kp LS(W) &kp N0 &kp R &kp L &kp D &kp DLLR &kp LS(T) &kp H &kp A &kp N &kp LS(T) &kp H &kp POUND &kp S &kp N3>;
            label = "OWTT";
        };

        OWOG: OWOG {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N0 &kp T &kp H &kp N3 &kp LS(R) &kp LS(W) &kp N0 &kp R &kp L &kp D &kp DLLR>;
            label = "OWOG";
        };
    };
};

# define QTY 1
# define LWR 2
# define RSE 3
# define ADJ 4
# define OTH 5

/ {
    keymap {
        compatible = "zmk,keymap";

        QTY {
            bindings = <
&kp ESC     &kp Q       &kp W       &kp E       &kp R       &kp T       &kp Y       &kp U       &kp I      &kp O       &kp P        &kp MINUS
&lt 1 TAB   &kp A       &kp S       &kp D       &kp F       &kp G       &kp H       &kp J       &kp K      &kp L       &kp SEMI     &kp APOS
&kp CAPS    &kp Z       &kp X       &kp C       &kp V       &kp B       &kp N       &kp M       &kp COMMA  &kp DOT     &kp FSLH     &kp BSLH
                        &kp F2      &kp F5                                                      &kp DEL    &kp C_MUTE
            &lt 2 SPACE &kp LSHFT   &kp BSPC    &kp LALT    &kp LCTRL   &lt ADJ TAB &kp SPACE   &kp ENTER  &kp LGUI    &kp APOS
            >;
        };

        LWR {
            bindings = <
&kp TILDE   &kp EXCL    &kp AT      &kp POUND   &kp DLLR    &kp PRCNT   &kp CARET   &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR    &kp MINUS
&kp GRAVE   &kp KP_N1   &kp KP_N2   &kp KP_N3   &kp KP_N4   &kp KP_N5   &kp KP_N6   &kp KP_N7   &kp KP_N8   &kp KP_N9   &kp KP_N0   &kp PLUS
&kp DEL     &kp TILDE   &kp GRAVE   &kp PIPE    &kp LBRC    &kp LBKT    &kp RBKT    &kp RBRC    &kp LT      &kp GT      &kp QMARK   &kp EQUAL
                        &kp LBRC    &kp LBKT                                                    &kp RBKT    &kp RBRC
            &trans      &kp SPACE   &kp BSPC    &kp LALT    &kp LCTRL   &kp LNLCK   &kp SPACE   &kp ENTER   &kp SPACE   &kp C_PP
            >;
        };

        RSE {
            bindings = <
&trans      &kp LALT    &kp LCTRL       &kp LC(PSCRN)   &kp LS(LCTRL)  &kp LSHFT    &kp LC(Y)   &kp HOME    &kp END             &kp PG_UP           &kp PG_DN   &trans
&trans      &kp LC(A)   &kp LC(S)       &kp LC(X)       &kp LC(C)      &kp LC(V)    &kp LC(H)   &kp LEFT    &kp DOWN            &kp UP              &kp RIGHT   &kp SLCK
&trans      &kp LC(Z)   &kp LC(I)       &kp LC(B)       &kp LC(F)      &kp LC(RET)  &trans      &trans      &kp LG(LC(LEFT))    &kp LG(LC(RIGHT))   &kp LGUI    &kp PAUSE_BREAK
                        &kp INS         &kp K_APP                                                           &kp LS(LG(LEFT))    &kp LG(LS(RIGHT))
            &kp LC(TAB) &kp LC(RS(M))   &kp LC(LS(O))   &kp LC(LS(K))  &trans       &kp TAB     &trans      &trans              &trans              &trans
            >;
        };

        ADJ {
            bindings = <
&trans      &kp F1      &kp F2      &kp F3      &kp F4      &kp F5      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp C_PP
&none       &none       &OP2        &OP1        &LPA        &WKPG       &RABS       &PKH        &none       &kp F11     &kp F12     &kp C_NEXT
&none       &none       &none       &OWTTc      &OWTT       &OWOG       &trans      &trans      &none       &none       &kp SLCK    &kp C_PREV
                        &none       &none                                           &bt BT_NXT  &bt BT_PRV
            &CPS        &UID        &EML        &HANGER     &HANGERU    &trans      &to 4       &none       &none       &trans
            >;
        };

        OTH {
            bindings = <
&rgb_ug RGB_TOG &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SPI &rgb_ug RGB_SPD &none       &none   &none   &none   &none   &none   &none       
&rgb_ug RGB_ON  &rgb_ug RGB_SAI &rgb_ug RGB_SAD &rgb_ug RGB_EFF &rgb_ug RGB_EFR &none       &none   &none   &none   &none   &none   &none     
&rgb_ug RGB_OFF &rgb_ug RGB_BRI &rgb_ug RGB_BRD &none           &none           &none       &none   &none   &none   &none   &none   &none       
                                &none           &none                                                       &none   &none
                &bt BT_CLR      &none           &none           &none           &to 0       &none   &none   &none   &none   &none       
            >;
        };

    };
};
