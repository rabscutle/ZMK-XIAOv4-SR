/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

//#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        QTY {
            bindings = <
&kp ESC    &kp Q        &kp W      &kp E      &kp R     &kp T        &kp Y    &kp U     &kp I      &kp O       &kp P        &kp MINUS
&lt 2 TAB  &kp A        &kp S      &kp D      &kp F     &kp G        &kp H    &kp J     &kp K      &kp L       &kp SEMI     &kp APOS
&kp CAPS   &kp Z        &kp X      &kp C      &kp V     &kp B        &kp N    &kp M     &kp COMMA  &kp DOT     &kp FSLH     &kp BSLH
                        &kp F2     &kp F5                                               &kp DEL    &kp K_MUTE
           &lt 1 SPACE  &kp LSHFT  &kp ENTER  &kp LALT  &kp LCTRL    &kp SQT  &kp LGUI  &kp BSPC   &kp SPACE   &lt 3 SPACE
            >;
        };

        LWR {
            bindings = <
&kp LS(TILDE)  &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)    &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)  &kp LS(LPAR)  &kp LS(RPAR)  &kp MINUS
&kp GRAVE      &kp N1         &kp N2        &kp N3         &kp N4        &kp N5           &kp N6         &kp N7        &kp N8        &kp N9        &kp N0        &kp PLUS
&kp DEL        &kp LS(TILDE)  &kp GRAVE     &kp LS(PIPE)   &kp LS(LBRC)  &kp LBKT         &kp RBKT       &kp LS(RBRC)  &kp MINUS     &kp EQUAL     &kp PLUS      &kp EQUAL
                              &kp LS(LBRC)  &kp LBKT                                                                   &kp RBKT      &kp LS(RBRC)
               &trans         &kp SPACE     &kp BSPC       &kp LALT      &kp LCTRL        &kp SQT        &kp DEL       &kp RET       &kp SPACE     &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans       &kp LCTRL      &kp LC(PRINTSCREEN)  &kp LS(LCTRL)  &kp LSHFT      &kp LC(Y)  &kp HOME  &kp END           &kp PG_UP          &kp PG_DN  &trans
&trans  &kp LC(A)    &kp LC(S)      &kp LC(X)            &kp LC(C)      &kp LC(V)      &kp LC(H)  &kp LEFT  &kp DOWN          &kp UP             &kp RIGHT  &kp F12
&trans  &kp LC(Z)    &kp LC(I)      &kp LC(B)            &kp LC(F)      &kp LC(RET)    &trans     &trans    &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))  &kp LGUI   &kp LEFT
                     &trans         &trans                                                                  &kp LS(LG(LEFT))  &kp LG(LS(RIGHT))
        &kp LC(TAB)  &kp LC(RS(M))  &kp LC(LS(O))        &kp LC(LS(K))  &trans         &trans     &trans    &trans            &trans             &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9   &kp F10  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp F11  &kp F12  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                &trans  &trans                                    &trans  &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans
            >;
        };

        CLMRK {
            bindings = <
&kp ESC   &kp Q   &kp W   &kp F   &kp P   &kp B     &kp J   &kp L   &kp U      &kp Y    &kp SEMI  &kp MINUS
&kp TAB   &kp A   &kp R   &kp S   &kp T   &kp G     &kp M   &kp N   &kp E      &kp I    &kp O     &kp APOS
&kp CAPS  &kp Z   &kp X   &kp C   &kp D   &kp V     &kp K   &kp H   &kp COMMA  &kp DOT  &kp FSLH  &kp BSLH
                  &kp F2  &kp F5                                    &kp DEL    &trans
          &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans     &trans   &trans
            >;
        };
    };
};
