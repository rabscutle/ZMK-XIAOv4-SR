/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
//#include <behaviors/mouse_keys.dtsi>

#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3     &kp N4     &kp N5      &kp N6   &kp N7     &kp N8     &kp N9    &kp N0    &kp EQUAL
&kp TAB    &kp Q   &kp W     &kp E      &kp R      &kp T       &kp Y    &kp U      &kp I      &kp O     &kp P     &kp MINUS
&kp LSHFT  &kp A   &kp S     &kp D      &kp F      &kp G       &kp H    &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp GRAVE  &kp Z   &kp X     &kp C      &kp V      &kp B       &kp N    &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp BSLH
&kp LEFT   &kp UP  &kp DOWN  &kp RIGHT                                             &kp LBKT   &kp RBKT  &kp RALT  &kp RCTRL
                             &kp LSHFT  &kp SPACE  &kp BSPC    &kp DEL  &kp RET    &kp RGUI
                                        &kp LALT   &mo 1       &kp ESC    &kp RCTRL
            >;
        };

        layer_1 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans    &trans  &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                                    &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
                                &trans  &trans    &trans  &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp LCLK  &mkp RCLK  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans                                          &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans     &trans     &trans
                                &trans  &trans    &trans     &trans
            >;
        };
    };
};

// //right hand trackball overrides
// &trackball_peripheral_listener {
//     input-processors =
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_temp_layer 3 500>;//activate layer 3 within 500ms of the trackball moving
// };
// //left hand trackball overrides
// &trackball_central_listener {
//     input-processors = 
//         <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,//this gets it to the default installation orientation
//         <&zip_xy_scaler 1 3>,//multiply sensitivity by 1, divide by 3 (make it slower for scrolling)
//         <&zip_xy_to_scroll_mapper>,//make this trackball output scrolling events by default instead of cursor movement
//         <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;//invert vertical scrolling so that the view moves in the same direction as the top of the trackball.
// };
